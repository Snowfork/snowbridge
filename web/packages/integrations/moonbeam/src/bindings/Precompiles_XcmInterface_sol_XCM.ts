/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export declare namespace XCM {
  export type LocationStruct = { parents: BigNumberish; interior: BytesLike[] };

  export type LocationStructOutput = [parents: bigint, interior: string[]] & {
    parents: bigint;
    interior: string[];
  };

  export type AssetLocationInfoStruct = {
    location: XCM.LocationStruct;
    amount: BigNumberish;
  };

  export type AssetLocationInfoStructOutput = [
    location: XCM.LocationStructOutput,
    amount: bigint
  ] & { location: XCM.LocationStructOutput; amount: bigint };

  export type AssetAddressInfoStruct = {
    asset: AddressLike;
    amount: BigNumberish;
  };

  export type AssetAddressInfoStructOutput = [asset: string, amount: bigint] & {
    asset: string;
    amount: bigint;
  };
}

export interface Precompiles_XcmInterface_sol_XCMInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "transferAssetsLocation"
      | "transferAssetsToPara20"
      | "transferAssetsToPara32"
      | "transferAssetsToRelay"
      | "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,uint8,uint8,bytes)"
      | "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,bytes,(uint8,bytes[]))"
      | "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,uint8,uint8,bytes)"
      | "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,bytes,(uint8,bytes[]))"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "transferAssetsLocation",
    values: [
      XCM.LocationStruct,
      XCM.LocationStruct,
      XCM.AssetLocationInfoStruct[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsToPara20",
    values: [
      BigNumberish,
      AddressLike,
      XCM.AssetAddressInfoStruct[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsToPara32",
    values: [
      BigNumberish,
      BytesLike,
      XCM.AssetAddressInfoStruct[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsToRelay",
    values: [BytesLike, XCM.AssetAddressInfoStruct[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,uint8,uint8,bytes)",
    values: [
      XCM.LocationStruct,
      XCM.AssetAddressInfoStruct[],
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,bytes,(uint8,bytes[]))",
    values: [
      XCM.LocationStruct,
      XCM.AssetAddressInfoStruct[],
      BigNumberish,
      BytesLike,
      XCM.LocationStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,uint8,uint8,bytes)",
    values: [
      XCM.LocationStruct,
      XCM.AssetLocationInfoStruct[],
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,bytes,(uint8,bytes[]))",
    values: [
      XCM.LocationStruct,
      XCM.AssetLocationInfoStruct[],
      BigNumberish,
      BytesLike,
      XCM.LocationStruct
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "transferAssetsLocation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsToPara20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsToPara32",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsToRelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,uint8,uint8,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,bytes,(uint8,bytes[]))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,uint8,uint8,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,bytes,(uint8,bytes[]))",
    data: BytesLike
  ): Result;
}

export interface Precompiles_XcmInterface_sol_XCM extends BaseContract {
  connect(runner?: ContractRunner | null): Precompiles_XcmInterface_sol_XCM;
  waitForDeployment(): Promise<this>;

  interface: Precompiles_XcmInterface_sol_XCMInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  transferAssetsLocation: TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      beneficiary: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  transferAssetsToPara20: TypedContractMethod<
    [
      paraId: BigNumberish,
      beneficiary: AddressLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  transferAssetsToPara32: TypedContractMethod<
    [
      paraId: BigNumberish,
      beneficiary: BytesLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  transferAssetsToRelay: TypedContractMethod<
    [
      beneficiary: BytesLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,uint8,uint8,bytes)": TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetAddressInfoStruct[],
      assetsTransferType: BigNumberish,
      remoteFeesIdIndex: BigNumberish,
      feesTransferType: BigNumberish,
      customXcmOnDest: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,bytes,(uint8,bytes[]))": TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetAddressInfoStruct[],
      remoteFeesIdIndex: BigNumberish,
      customXcmOnDest: BytesLike,
      remoteReserve: XCM.LocationStruct
    ],
    [void],
    "nonpayable"
  >;

  "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,uint8,uint8,bytes)": TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      assetsTransferType: BigNumberish,
      remoteFeesIdIndex: BigNumberish,
      feesTransferType: BigNumberish,
      customXcmOnDest: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,bytes,(uint8,bytes[]))": TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      remoteFeesIdIndex: BigNumberish,
      customXcmOnDest: BytesLike,
      remoteReserve: XCM.LocationStruct
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "transferAssetsLocation"
  ): TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      beneficiary: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsToPara20"
  ): TypedContractMethod<
    [
      paraId: BigNumberish,
      beneficiary: AddressLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsToPara32"
  ): TypedContractMethod<
    [
      paraId: BigNumberish,
      beneficiary: BytesLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsToRelay"
  ): TypedContractMethod<
    [
      beneficiary: BytesLike,
      assets: XCM.AssetAddressInfoStruct[],
      feeAssetItem: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,uint8,uint8,bytes)"
  ): TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetAddressInfoStruct[],
      assetsTransferType: BigNumberish,
      remoteFeesIdIndex: BigNumberish,
      feesTransferType: BigNumberish,
      customXcmOnDest: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsUsingTypeAndThenAddress((uint8,bytes[]),(address,uint256)[],uint8,bytes,(uint8,bytes[]))"
  ): TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetAddressInfoStruct[],
      remoteFeesIdIndex: BigNumberish,
      customXcmOnDest: BytesLike,
      remoteReserve: XCM.LocationStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,uint8,uint8,bytes)"
  ): TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      assetsTransferType: BigNumberish,
      remoteFeesIdIndex: BigNumberish,
      feesTransferType: BigNumberish,
      customXcmOnDest: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferAssetsUsingTypeAndThenLocation((uint8,bytes[]),((uint8,bytes[]),uint256)[],uint8,bytes,(uint8,bytes[]))"
  ): TypedContractMethod<
    [
      dest: XCM.LocationStruct,
      assets: XCM.AssetLocationInfoStruct[],
      remoteFeesIdIndex: BigNumberish,
      customXcmOnDest: BytesLike,
      remoteReserve: XCM.LocationStruct
    ],
    [void],
    "nonpayable"
  >;

  filters: {};
}
