package parachain

import (
	gethCommon "github.com/ethereum/go-ethereum/common"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestGetDestination(t *testing.T) {
	agentExecutePayload := "000000000000000000000000000000000000000000000000000000000000002081c5ab2571199e3188135178f3c2c8e2d268be1313d029b30f534fa579b69b79000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000774667629726ec1fabebcec0d9139bd1c8f72a2300000000000000000000000044a57ee2f2fccb85fda2b0b18ebd0d8d2333700e000000000000000000000000000000000000000000000000000000003b9aca00"
	decodePayloadAndCompareDestinationAddress(t, 0, agentExecutePayload, "0x44a57ee2f2fccb85fda2b0b18ebd0d8d2333700e")

	mintForeignTokenPayload := "2121cfe35065c0c33465fbada265f08e9613428a4b9eb4bb717cd7db2abf622e00000000000000000000000090a987b944cb1dcce5564e5fdecd7a54d3de27fe000000000000000000000000000000000000000000000000000000003b9aca00"
	decodePayloadAndCompareDestinationAddress(t, 11, mintForeignTokenPayload, "0x90a987b944cb1dcce5564e5fdecd7a54d3de27fe")
}

func decodePayloadAndCompareDestinationAddress(t *testing.T, command uint8, payload, expectedAddress string) {
	data := gethCommon.Hex2Bytes(payload)

	destination, err := GetDestination(OutboundQueueMessage{
		Command: command,
		Params:  data,
	})
	assert.NoError(t, err)

	assert.Equal(t, expectedAddress, destination)
}
