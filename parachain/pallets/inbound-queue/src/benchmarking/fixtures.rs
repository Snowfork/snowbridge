use super::*;
use hex_literal::hex;
use snowbridge_beacon_primitives::CompactExecutionHeader;
use snowbridge_core::{Message, Proof};

// Generated, do not edit!
// See README.md for instructions to generate
pub struct InboundQueueTest {
	pub execution_header: CompactExecutionHeader,
	pub message: Message,
}

pub fn make_create_message() -> InboundQueueTest {
	InboundQueueTest{
        execution_header: CompactExecutionHeader{
            parent_hash: hex!("93a72ceae4c8af8f4438784980d3f57c7a149495a5a49e0be9a6dffabc10de6e").into(),
            block_number: 42,
            state_root: hex!("9798febbce70182a623475afced52b6809e5d6a6d3dfe4a8c2d4bffec72f29bf").into(),
            receipts_root: hex!("113d2f9760141c1a13e0d6fecca13f84b8aec0b88e05cb53923441aa51fbdbff").into(),
        },
        message: Message {
            data: hex!("f9011c94ee9170abfbf9421ad6dd07f6bdec9d89f2b581e0f863a01b11dcf133cc240f682dab2d3a8e4cd35c5da8c9cf99adac4336f8512584c5ada000000000000000000000000000000000000000000000000000000000000003e8a00000000000000000000000000000000000000000000000000000000000000001b8a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004b000f000000000000000100d184c103f7acc340847eee82a0b909e3358bc28d440edffa1352b13227e8ee646f3ea37456dec701345772617070656420457468657210574554481235003511000000000000000000000000000000000000000000").to_vec(),
            proof: Proof {
                block_hash: hex!("f4a8647b907dca350b62f39c39bf61c89b2032d586aff486b7c628259772820f").into(),
                tx_index: 0,
                data: (vec![hex!("113d2f9760141c1a13e0d6fecca13f84b8aec0b88e05cb53923441aa51fbdbff").to_vec()], vec![hex!("f9030a822080b9030402f90300018301d6e2bf901f5f87a942ffa5ecdbe006d30397c7636d3e015eee251369ff842a0c965575a00553e094ca7c5d14f02e107c258dda06867cbf9e0e69f80e71bbcc1a000000000000000000000000000000000000000000000000000000000000003e8a000000000000000000000000000000000000000000000000000000000000003e8f9011c94ee9170abfbf9421ad6dd07f6bdec9d89f2b581e0f863a01b11dcf133cc240f682dab2d3a8e4cd35c5da8c9cf99adac4336f8512584c5ada000000000000000000000000000000000000000000000000000000000000003e8a00000000000000000000000000000000000000000000000000000000000000001b8a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004b000f000000000000000100d184c103f7acc340847eee82a0b909e3358bc28d440edffa1352b13227e8ee646f3ea37456dec701345772617070656420457468657210574554481235003511000000000000000000000000000000000000000000f858948cf6147918a5cbb672703f879f385036f8793a24e1a01449abf21e49fd025f33495e77f7b1461caefdd3d4bb646424a3f445c4576a5ba0000000000000000000000000440edffa1352b13227e8ee646f3ea37456dec701").to_vec()]),
            },
        },
    }
}

pub fn make_mint_message() -> InboundQueueTest {
	InboundQueueTest{
        execution_header: CompactExecutionHeader{
            parent_hash: hex!("a9fe08806bd4849873ea1a5e4d889176dc3427a9a1ad0701adca6328f88d4603").into(),
            block_number: 45,
            state_root: hex!("9798febbce70182a623475afced52b6809e5d6a6d3dfe4a8c2d4bffec72f29bf").into(),
            receipts_root: hex!("87d0cbe8052e9e979e86bae71d2e62e893f769b59679ed6092883093e4fdf1a7").into(),
        },
        message: Message {
            data: hex!("f9013c94ee9170abfbf9421ad6dd07f6bdec9d89f2b581e0f863a01b11dcf133cc240f682dab2d3a8e4cd35c5da8c9cf99adac4336f8512584c5ada000000000000000000000000000000000000000000000000000000000000003e8a00000000000000000000000000000000000000000000000000000000000000002b8c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000068000f000000000000000101d184c103f7acc340847eee82a0b909e3358bc28d440edffa1352b13227e8ee646f3ea37456dec70100000101001cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c0000e8890423c78a0000000000000000000000000000000000000000000000000000000000000000").to_vec(),
            proof: Proof {
                block_hash: hex!("53d66c7fc40f17ed22938c4db8bda7bcda0c977a4fcab515eeb932e8df27b2b1").into(),
                tx_index: 0,
                data: (vec![hex!("87d0cbe8052e9e979e86bae71d2e62e893f769b59679ed6092883093e4fdf1a7").to_vec()], vec![hex!("f90503822080b904fd02f904f90183020671bf903eef89b94440edffa1352b13227e8ee646f3ea37456dec701f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa000000000000000000000000090a987b944cb1dcce5564e5fdecd7a54d3de27fea0000000000000000000000000b8ea8cb425d85536b158d661da1ef0895bb92f1da00000000000000000000000000000000000000000000000008ac7230489e80000f89994b8ea8cb425d85536b158d661da1ef0895bb92f1de1a05548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62b86000000000000000000000000090a987b944cb1dcce5564e5fdecd7a54d3de27fe000000000000000000000000440edffa1352b13227e8ee646f3ea37456dec7010000000000000000000000000000000000000000000000008ac7230489e80000f87a942ffa5ecdbe006d30397c7636d3e015eee251369ff842a0c965575a00553e094ca7c5d14f02e107c258dda06867cbf9e0e69f80e71bbcc1a000000000000000000000000000000000000000000000000000000000000003e8a000000000000000000000000000000000000000000000000000000000000003e8f9013c94ee9170abfbf9421ad6dd07f6bdec9d89f2b581e0f863a01b11dcf133cc240f682dab2d3a8e4cd35c5da8c9cf99adac4336f8512584c5ada000000000000000000000000000000000000000000000000000000000000003e8a00000000000000000000000000000000000000000000000000000000000000002b8c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000068000f000000000000000101d184c103f7acc340847eee82a0b909e3358bc28d440edffa1352b13227e8ee646f3ea37456dec70100000101001cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c0000e8890423c78a0000000000000000000000000000000000000000000000000000000000000000f8f9948cf6147918a5cbb672703f879f385036f8793a24e1a067f384a3568401fb35173fb8f28d7f384877505fa17e28e92fd1c7df8f906652b8c00000000000000000000000000000000000000000000000000000000000000060000000000000000000000000440edffa1352b13227e8ee646f3ea37456dec7010000000000000000000000000000000000000000000000008ac7230489e800000000000000000000000000000000000000000000000000000000000000000024000101001cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c00000000000000000000000000000000000000000000000000000000").to_vec()]),
            },
        },
    }
}
