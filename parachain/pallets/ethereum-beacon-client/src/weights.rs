//! Autogenerated weights for `snowbridge_ethereum_beacon_client`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `192.168.0.127`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bridge-hub-rococo-dev"), DB CACHE: 1024

// Executed Command:
// target/release/polkadot-parachain
// benchmark
// pallet
// --chain=bridge-hub-rococo-dev
// --pallet=snowbridge_ethereum_beacon_client
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 50
// --repeat
// 20
// --output
// ../parachain/pallets/ethereum-beacon-client/src/mainnet_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;
use crate::WeightInfo;
/// Weights for ethereum_beacon_client using the Snowbridge node and recommended hardware.
pub struct SnowbridgeWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SnowbridgeWeight<T> {
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestSyncCommitteePeriod (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestSyncCommitteePeriod (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:2 w:1)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaderSlots (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaderSlots (max_values: Some(1), max_size: Some(8002), added: 8497, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaders (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn sync_committee_period_update() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24983`
		//  Estimated: `72217`
		// Minimum execution time: 75_737_000_000 picoseconds.
		Weight::from_parts(75_930_000_000, 0)
			.saturating_add(Weight::from_parts(0, 72217))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaderSlots (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaderSlots (max_values: Some(1), max_size: Some(8002), added: 8497, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaders (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn import_finalized_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24983`
		//  Estimated: `43615`
		// Minimum execution time: 72_171_000_000 picoseconds.
		Weight::from_parts(72_439_000_000, 0)
			.saturating_add(Weight::from_parts(0, 43615))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestExecutionHeaderState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ExecutionHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient ExecutionHeaders (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn import_execution_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `25027`
		//  Estimated: `37729`
		// Minimum execution time: 72_153_000_000 picoseconds.
		Weight::from_parts(72_202_000_000, 0)
			.saturating_add(Weight::from_parts(0, 37729))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn update_only_with_verify_signed_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24905`
		//  Estimated: `29616`
		// Minimum execution time: 74_446_000_000 picoseconds.
		Weight::from_parts(74_629_000_000, 0)
			.saturating_add(Weight::from_parts(0, 29616))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestSyncCommitteePeriod (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestSyncCommitteePeriod (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:2 w:1)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaderSlots (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaderSlots (max_values: Some(1), max_size: Some(8002), added: 8497, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaders (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn update_without_bls_fast_aggregate_verify() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24983`
		//  Estimated: `72217`
		// Minimum execution time: 1_268_000_000 picoseconds.
		Weight::from_parts(1_294_000_000, 0)
			.saturating_add(Weight::from_parts(0, 72217))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(24634), added: 27109, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn update_with_bls_aggregate_but_without_verify() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `24905`
		//  Estimated: `29616`
		// Minimum execution time: 56_957_000_000 picoseconds.
		Weight::from_parts(57_098_000_000, 0)
			.saturating_add(Weight::from_parts(0, 29616))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	// These weight are just by estimation and need benchmark later
	fn block_bridge() -> Weight {
		Weight::from_parts(10_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn begin_recovery() -> Weight {
		Weight::from_parts(100_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn sync_recovery() -> Weight {
		Weight::from_parts(1_000_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	fn unblock_bridge() -> Weight {
		Weight::from_parts(10_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn init_sync() -> Weight {
		Weight::from_parts(1_000_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
